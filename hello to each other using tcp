server
import java.io.*;
import java.net.*;

public class TCPServer {
    public static void main(String[] args) {
        try {
            // Create server socket listening on port 5000
            ServerSocket serverSocket = new ServerSocket(5000);

            // Accept client connection
            Socket clientSocket = serverSocket.accept();
            System.out.println("Client connected.");

            // Create input stream from client
            BufferedReader in = new BufferedReader(new InputStreamReader(clientSocket.getInputStream()));

            // Create output stream to client
            PrintWriter out = new PrintWriter(clientSocket.getOutputStream(), true);

            // Read message from client
            String clientMessage = in.readLine();
            System.out.println("Client: " + clientMessage);

            // Say hello back to client
            out.println("Hello from server!");

            // Close streams and socket
            in.close();
            out.close();
            clientSocket.close();
            serverSocket.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}
client
import java.io.*;
import java.net.*;

public class TCPClient {
    public static void main(String[] args) {
        try {
            // Create socket to connect to server on localhost and port 5000
            Socket socket = new Socket("localhost", 5000);

            // Create input stream from server
            BufferedReader in = new BufferedReader(new InputStreamReader(socket.getInputStream()));

            // Create output stream to server
            PrintWriter out = new PrintWriter(socket.getOutputStream(), true);

            // Say hello to server
            out.println("Hello from client!");

            // Read response from server
            String serverMessage = in.readLine();
            System.out.println("Server: " + serverMessage);

            // Close streams and socket
            in.close();
            out.close();
            socket.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}
